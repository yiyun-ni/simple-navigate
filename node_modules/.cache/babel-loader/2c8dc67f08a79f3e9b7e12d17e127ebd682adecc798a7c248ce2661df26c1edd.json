{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport ThemeProviderNoVars from \"./ThemeProviderNoVars.js\";\nimport { CssVarsProvider } from \"./ThemeProviderWithVars.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme,\n  ...props\n}) {\n  if (typeof theme === 'function') {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\n  if (!('colorSchemes' in muiTheme)) {\n    if (!('vars' in muiTheme)) {\n      // For non-CSS variables themes, set `vars` to null to prevent theme inheritance from the upper theme.\n      // The example use case is the docs demo that uses ThemeProvider to customize the theme while the upper theme is using CSS variables.\n      return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n        theme: {\n          ...theme,\n          vars: null\n        },\n        ...props\n      });\n    }\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\n    theme: theme,\n    ...props\n  });\n}","map":{"version":3,"names":["React","ThemeProviderNoVars","CssVarsProvider","THEME_ID","jsx","_jsx","ThemeProvider","theme","props","muiTheme","vars"],"sources":["/Users/oscar178/Desktop/ SpatialNavigation/simple-navigate/node_modules/@mui/material/esm/styles/ThemeProvider.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport ThemeProviderNoVars from \"./ThemeProviderNoVars.js\";\nimport { CssVarsProvider } from \"./ThemeProviderWithVars.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme,\n  ...props\n}) {\n  if (typeof theme === 'function') {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\n  if (!('colorSchemes' in muiTheme)) {\n    if (!('vars' in muiTheme)) {\n      // For non-CSS variables themes, set `vars` to null to prevent theme inheritance from the upper theme.\n      // The example use case is the docs demo that uses ThemeProvider to customize the theme while the upper theme is using CSS variables.\n      return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n        theme: {\n          ...theme,\n          vars: null\n        },\n        ...props\n      });\n    }\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\n    theme: theme,\n    ...props\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,mBAAmB,MAAM,0BAA0B;AAC1D,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,eAAe,SAASC,aAAaA,CAAC;EACpCC,KAAK;EACL,GAAGC;AACL,CAAC,EAAE;EACD,IAAI,OAAOD,KAAK,KAAK,UAAU,EAAE;IAC/B,OAAO,aAAaF,IAAI,CAACJ,mBAAmB,EAAE;MAC5CM,KAAK,EAAEA,KAAK;MACZ,GAAGC;IACL,CAAC,CAAC;EACJ;EACA,MAAMC,QAAQ,GAAGN,QAAQ,IAAII,KAAK,GAAGA,KAAK,CAACJ,QAAQ,CAAC,GAAGI,KAAK;EAC5D,IAAI,EAAE,cAAc,IAAIE,QAAQ,CAAC,EAAE;IACjC,IAAI,EAAE,MAAM,IAAIA,QAAQ,CAAC,EAAE;MACzB;MACA;MACA,OAAO,aAAaJ,IAAI,CAACJ,mBAAmB,EAAE;QAC5CM,KAAK,EAAE;UACL,GAAGA,KAAK;UACRG,IAAI,EAAE;QACR,CAAC;QACD,GAAGF;MACL,CAAC,CAAC;IACJ;IACA,OAAO,aAAaH,IAAI,CAACJ,mBAAmB,EAAE;MAC5CM,KAAK,EAAEA,KAAK;MACZ,GAAGC;IACL,CAAC,CAAC;EACJ;EACA,OAAO,aAAaH,IAAI,CAACH,eAAe,EAAE;IACxCK,KAAK,EAAEA,KAAK;IACZ,GAAGC;EACL,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}